name: CD - Deploy with Terraform

on:
  workflow_run:
    workflows: ["CI pipeline - Build & Push Docker Image"]  # Use the exact name from your CI workflow's 'name:' field
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set IMAGE_TAG env
        run: echo "IMAGE_TAG=gh-${{ github.event.workflow_run.head_sha }}" >> $GITHUB_ENV

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init
        run: terraform init
        working-directory: terraform2_task5/

      - name: Terraform Plan
        run: terraform plan -var="image_tag=$IMAGE_TAG" \
             -var="app_keys=${{ secrets.APP_KEYS }}" \
             -var="api_token_salt=${{ secrets.API_TOKEN_SALT }}" \
             -var="admin_jwt_secret=${{ secrets.ADMIN_JWT_SECRET }}"
        working-directory: terraform2_task5/

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="image_tag=$IMAGE_TAG" \
             -var="app_keys=${{ secrets.APP_KEYS }}" \
             -var="api_token_salt=${{ secrets.API_TOKEN_SALT }}" \
             -var="admin_jwt_secret=${{ secrets.ADMIN_JWT_SECRET }}"
        working-directory: terraform2_task5/